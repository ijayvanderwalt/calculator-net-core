#pragma checksum "C:\Users\IjayVanDerWalt\Documents\GitHub\WinSMS\calculator-net-core\calculator-net-core\calculator-net-core\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a0ee625556252d9c54c1d5dcc97ed34618de81dd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\IjayVanDerWalt\Documents\GitHub\WinSMS\calculator-net-core\calculator-net-core\calculator-net-core\Views\_ViewImports.cshtml"
using calculator_net_core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\IjayVanDerWalt\Documents\GitHub\WinSMS\calculator-net-core\calculator-net-core\calculator-net-core\Views\_ViewImports.cshtml"
using calculator_net_core.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0ee625556252d9c54c1d5dcc97ed34618de81dd", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa106ec6e23c0cf44a829839910d52c147730d1f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("calc"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\IjayVanDerWalt\Documents\GitHub\WinSMS\calculator-net-core\calculator-net-core\calculator-net-core\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Simple Calculator";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!--HTML and CSS Template from https://www.foolishdeveloper.com/2021/01/make-calculator-in-html.html-->
<style>
    /* add css code*/
    body {
        background-color: #0094ff;
    }

    table {
        margin: auto;
        background-color: #9dd2ea;
        width: 295px;
        height: 325px;
        text-align: center;
        margin-top: 50px;
        border-radius: 4px;
    }

    #calculator {
        position: absolute;
        max-width: 80%;
        left: 58%;
        top: 10%;
    }

    input {
        outline: 0;
        position: relative;
        left: 5px;
        top: 5px;
        border: 0;
        color: #495069;
        background-color: 4px;
        width: 60px;
        height: 50px;
        float: left;
        margin: 5px;
        font-size: 20px;
        box-shadow: 0 4px rgba(0,0,0,0.2);
    }
        /* add input hover effectg */
        input:hover {
            border: 0 solid #000;
            color: #495069;
            background-");
            WriteLiteral(@"color: #8f5fda;
            border-radius: 4px;
            width: 60px;
            height: 50px;
            float: left;
            margin: 5px;
            font-size: 20px;
            box-shadow: 0 4px #644294;
        }

    #answer {
        width: 270px;
        font-size: 26px;
        text-align: center;
        background-color: #f1faeb;
        float: left;
    }
        /* answer hover effect */
        #answer:hover {
            width: 270px;
            font-size: 26px;
            text-align: center;
            box-shadow: 0 4px rgba(0,0,0,0.2);
            background-color: #f1faeb;
        }

    .operator {
        background-color: #f1ff92;
        position: relative;
    }

        /* hover */
        .operator:hover {
            background-color: #e7f56b;
            box-shadow: 0 4px #b7c259;
        }

    #clear {
        float: left;
        position: relative;
        display: block;
        background-color: #ff9fa8;
        margin-bott");
            WriteLiteral(@"om: 15px;
    }
        /* hover */
        #clear:hover {
            float: left;
            display: block;
            background-color: #f297a0;
            margin-bottom: 15px;
            box-shadow: 0 4px #cc7f86;
        }
</style>


<section id=""calculator-sec"">
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a0ee625556252d9c54c1d5dcc97ed34618de81dd6399", async() => {
                WriteLiteral(@"
        <table>
            <tr>
                <td>
                    <input type=""text"" size=""16"" id=""answer"" name=""input"" v-model=""inputDisplay"">
                    <br>
                </td>
            </tr>
            <tr>
                <td>
                    <input type=""button"" name=""one"" value=""1"" v-on:click=""inputDisplay+='1', inputString += '1'"">
                    <input type=""button"" name=""two"" value=""2"" v-on:click=""inputDisplay+='2',inputString += '2'"">
                    <input type=""button"" name=""three"" value=""3"" v-on:click=""inputDisplay+='3',inputString += '3'"">
                    <input type=""button"" class=""operator"" name=""plus"" value=""+"" v-on:click=""inputDisplay+='+',inputString += 'plus'"">
                    <br>
                    <input type=""button"" name=""four"" value=""4"" v-on:click=""inputDisplay+='4', inputString += '4'"">
                    <input type=""button"" name=""five"" value=""5"" v-on:click=""inputDisplay+='5',inputString += '5'"">
                    <");
                WriteLiteral(@"input type=""button"" name=""six"" value=""6"" v-on:click=""inputDisplay+='6',inputString += '6'"">
                    <input type=""button"" class=""operator"" name=""minus"" value=""-"" v-on:click=""inputDisplay+='-',inputString += 'minus'"">
                    <br>
                    <input type=""button"" name=""seven"" value=""7"" v-on:click=""inputDisplay+='7',inputString += '7'"">
                    <input type=""button"" name=""eight"" value=""8"" v-on:click=""inputDisplay+='8',inputString += '8'"">
                    <input type=""button"" name=""nine"" value=""9"" v-on:click=""inputDisplay+='9',inputString += '9'"">
                    <input type=""button"" class=""operator"" name=""times"" value=""*"" v-on:click=""inputDisplay+='*',inputString += 'multiply'"">
                    <br>
                    <input type=""button"" id=""clear"" name=""clear"" value="" C "" v-on:click=""inputDisplay = '', inputString = '' "">
                    <input type=""button"" name=""zero"" value=""0"" v-on:click=""inputDisplay+='0',inputString += '0'"">
           ");
                WriteLiteral(@"         <input type=""button"" name=""doit"" value="" = "" v-on:click=""evaluate"">
                    <input type=""button"" class=""operator"" name=""div"" value=""/"" v-on:click=""inputDisplay+='/',inputString += 'divide'"">
                    <br>
                </td>
            </tr>
        </table>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</section>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        let calculator = new Vue({
            el: '#calculator-sec',
            data: {
                inputDisplay: """",
                inputString: '',
            },
            methods: {
                evaluate: function () {
                    let that = this;
                    $.get(`/evaluate/${that.inputString}`, function (data) {
                        that.inputDisplay = data;
                        that.inputString = data;
                    });
                }
            }
        });
    </script>

");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
